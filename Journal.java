package com.company;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

//Original Phonebook Group Project by Spencer Lowery, John Agubosim, Evan Cothern
//Journal update by John Agubosim

public class Journal extends javax.swing.JFrame {
    static int Index = 0;
    public static Entry[] list = new Entry[99999];
    DefaultListModel<String> model;
    /**
     * Creates new form Journal
     */
    public Journal() {
        try {
            Functions.readFile();
        } catch (Exception ex) {
            System.out.println("File not found");
            Logger.getLogger(Journal.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        model = new DefaultListModel<>();
        listUpdate();

    }
    public void listUpdate() {
        model.removeAllElements();
        for (int i = 0; i<Journal.Index; i++) {
            if (Journal.list[i] != null) {
                model.addElement(Journal.list[i].getDate() + " " + Journal.list[i].getTitle());
            }
        }
        entryList.setModel(model);
    }

    public void showSelection(int i) {
        jLabel1.setText("Date: " + list[i].getDate() + " " + list[i].getTitle());
        jLabel2.setText("Mood: " + list[i].getMood());
        jTextArea1.setText(list[i].getJournal());
    }
    public void clearSelection() {
        jLabel1.setText("Date: ");
        jLabel2.setText("Mood: ");
        jTextArea1.setText("");
    }
    public void deleteList() {
        for (int i = Index; i>=0; i++) {
            Functions.deleteEntry(i);
        }
        Index = 0;
        listUpdate();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        entryList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        createButton = new javax.swing.JButton();
        mergeButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        sqButton = new javax.swing.JButton();
        fSortButton = new javax.swing.JButton();
        lSortButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Phonebook - Spencer Lowery, John Agubosim, Evan Cothern; Journal - John Agubosim");

        entryList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entryListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(entryList);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Date:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Mood:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Journal:");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        createButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        mergeButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        mergeButton.setText("Merge");
        mergeButton.setMaximumSize(new java.awt.Dimension(137, 53));
        mergeButton.setMinimumSize(new java.awt.Dimension(137, 53));
        mergeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mergeButtonActionPerformed(evt);
            }
        });

        editButton.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        sqButton.setText("Save and Quit");
        sqButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqButtonActionPerformed(evt);
            }
        });

        lSortButton.setText("Sort by Title");
        lSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lSortButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(lSortButton)
                                                .addGap(33, 33, 33)
                                                .addComponent(deleteButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(saveButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(sqButton)
                                                .addGap(24, 24, 24))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jLabel1)
                                                                        .addComponent(jLabel2)
                                                                        .addComponent(jLabel3)
                                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                .addGap(103, 103, 103)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(createButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(mergeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGap(96, 96, 96))))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(createButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(mergeButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(editButton))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(deleteButton)
                                                .addComponent(saveButton)
                                                .addComponent(sqButton))
                                        .addComponent(lSortButton))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        Functions.createEntry();
        listUpdate();
    }//GEN-LAST:event_createButtonActionPerformed

    private void mergeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mergeButtonActionPerformed
        Functions.mergeEntries();
        listUpdate();
        clearSelection();
    }//GEN-LAST:event_mergeButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        try {
            Functions.writeFile();
        } catch (Exception ex) {
            System.out.println("No file found");
            Logger.getLogger(Journal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void sqButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqButtonActionPerformed
        try {
            Functions.writeFile();
            System.exit(0);
        } catch (Exception ex) {
            System.out.println("No file found");
            Logger.getLogger(Journal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sqButtonActionPerformed

    private void lSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lSortButtonActionPerformed
        Functions.sortByTitle();
        listUpdate();
    }//GEN-LAST:event_lSortButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int tmppos = entryList.getSelectedIndex();
        if (tmppos != -1){
            Functions.deleteEntry(tmppos);
            clearSelection();
            listUpdate();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        int tmppos = entryList.getSelectedIndex();
        if (tmppos != -1){
            showSelection(tmppos);
            Functions.editEntry(tmppos);
            clearSelection();
            listUpdate();
        }//GEN-LAST:event_editButtonActionPerformed
    }
    private void entryListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entryListMouseClicked
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int i = list.locationToIndex(evt.getPoint());
            showSelection(i);
        }
    }//GEN-LAST:event_entryListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Journal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Journal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Journal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Journal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Journal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JList<String> entryList;
    private javax.swing.JButton fSortButton;
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton lSortButton;
    private javax.swing.JButton mergeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton sqButton;
    // End of variables declaration//GEN-END:variables
}


class Functions {

    public static void readFile() throws Exception{
        FileReader R = new FileReader("Journal.txt");
        BufferedReader B = new BufferedReader(R);
        String tmp;
        while((tmp = B.readLine()) != null) {
            String[] tmpa = tmp.split("\t");
            int tmpi = Character.getNumericValue(tmpa[0].charAt(0));
            Journal.list[Journal.Index] = new Entry(tmpi, tmpa[1], tmpa[2], tmpa[3], tmpa[4]);
            Journal.Index++;
        }
        R.close();
    }
    public static void writeFile() throws Exception {
        PrintWriter P = new PrintWriter("Journal.txt");
        for(int i = 0; i<Journal.Index; i++) {
            P.println(Journal.list[i].getIndex() + "\t" + Journal.list[i].getDate() + "\t" + Journal.list[i].getTitle() + "\t" + Journal.list[i].getMood() + "\t" + Journal.list[i].getJournal());
        }
        P.close();
    }
    public static void createEntry() {
        String tmpd = (String) JOptionPane.showInputDialog(null, "Please enter today's date:");

        while(tmpd.length() <= 1) {
            //tmpd = (String) JOptionPane.showInputDialog(null, "That is not a valid imput please try again:");
        }
        String tmpt = (String) JOptionPane.showInputDialog(null, "Please enter the title");
        while( tmpt.length() <= 1) {
            tmpt = (String) JOptionPane.showInputDialog(null, "That is not a valid input please try again:");
        }
        String tmpMood = (String) JOptionPane.showInputDialog(null, "Please rate your mood today from 1 to 5:");
        Boolean n = checkMood(tmpMood);
        if (n == false || Integer.parseInt(tmpMood)>5) {
            while(n==false || Integer.parseInt(tmpMood)>5) {
                tmpMood = (String) JOptionPane.showInputDialog(null, "That is not a valid mood please try again:");
                n = checkMood(tmpMood);
            }
        }
        String tmpJournal;
        String tmp = (String) JOptionPane.showInputDialog(null, "Do you want to enter a journal entry (y/n)?");
        if (tmp.charAt(0) == 'y') {tmpJournal = (String) JOptionPane.showInputDialog(null, "Please enter the journal entry below");}
        else {tmpJournal = " ";}
        Journal.list[Journal.Index] = new Entry(Journal.Index, tmpd.toUpperCase(), tmpt, tmpMood, tmpJournal);
        Journal.Index++;
    }
    public static Boolean checkMood(String num) {
        Boolean y = false;
        String p = "\\d{1}";
        if(num.matches(p)) {
            y = true;
        }return y;
    }
    public static void editEntry(int i) {
        String tmp;
        tmp =(String) JOptionPane.showInputDialog(null, "The current date is '" + Journal.list[i].getDate() + "' what do you want the new first name to be?");
        while(tmp.length() <= 1) {
            tmp = (String) JOptionPane.showInputDialog(null, "That is not a valid first name code please try again.");
        }
        Journal.list[i].setDate(tmp);
        tmp =(String) JOptionPane.showInputDialog(null, "The current title is '" + Journal.list[i].getTitle() + "' what do you want the new last name to be?");
        while(tmp.length() <= 1) {

            tmp =(String) JOptionPane.showInputDialog(null, "That is not a valid last name code please try again.");
        }
        Journal.list[i].setTitle(tmp);


        tmp =(String) JOptionPane.showInputDialog(null, "The current mood is '" + Journal.list[i].getMood() + "' what do you want the new mood to be?");
        boolean n = checkMood(tmp);

        while(n==false) {

            tmp =(String) JOptionPane.showInputDialog(null, "That is not a valid phone mood please try again.");
            n = checkMood(tmp);
        }

        Journal.list[i].setMood(tmp);


        tmp =(String) JOptionPane.showInputDialog(null, "The current journal entry is '" + Journal.list[i].getJournal() + "' what do you want the new journal to be?");
        Journal.list[i].setJournal(tmp);
    }

    public static void sortByTitle() {
        try {
            Functions.writeFile();
        } catch (Exception ex) {
            System.out.println("No file found");
            Logger.getLogger(Journal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (Journal.Index != 0) {
            for (int i = 0; i<Journal.Index-1; i++) {
                for (int j = i+1; j<Journal.Index; j++) {
                    if(Journal.list[i].getTitle().compareTo(Journal.list[j].getTitle())>0) {
                        Entry tmp = new Entry(0, Journal.list[i].getDate(), Journal.list[i].getTitle(),Journal.list[i].getMood(), Journal.list[i].getJournal());
                        Journal.list[i].setDate(Journal.list[j].getDate());
                        Journal.list[i].setTitle(Journal.list[j].getTitle());
                        Journal.list[i].setMood(Journal.list[j].getMood());
                        Journal.list[i].setJournal(Journal.list[j].getJournal());

                        Journal.list[j].setDate(tmp.getDate());
                        Journal.list[j].setTitle(tmp.getTitle());
                        Journal.list[j].setMood(tmp.getMood());
                        Journal.list[j].setJournal(tmp.getJournal());
                    }
                }
            }
        }else {System.out.println("There are no entries to sort.");}
    }
    public static void mergeEntries() {
        String tmpnm ="";
        String tmpno ="";
        for (int i = 0; i<Journal.Index; i++) {
            String[] test = {Journal.list[i].getDate()};
            for (int j = i+1; j<Journal.Index; j++) {
                String[] vs = {Journal.list[j].getDate()};
                if(test[0].contentEquals(vs[0])) {
                    if (Journal.list[i].getDate().contentEquals(Journal.list[j].getDate())) {
                    }else {tmpnm = Journal.list[j].getDate();}
                    if (Journal.list[i].getJournal().contentEquals(Journal.list[j].getJournal())) {
                    }else {tmpno = Journal.list[j].getJournal();}
                    String journal = Journal.list[i].getJournal() + ", " + tmpnm + " " + tmpno;
                    Journal.list[i].setJournal(journal);
                    deleteEntry(j);
                }
            }
        }
    }
    public static void deleteEntry(int i) {
        for (int j = i; j < (Journal.Index-1); j++) {
            int m = j+1;
            Journal.list[j].setDate(Journal.list[m].getDate());
            Journal.list[j].setTitle(Journal.list[m].getTitle());
            Journal.list[j].setMood(Journal.list[m].getMood());
            Journal.list[j].setJournal(Journal.list[m].getJournal());
        }
        Journal.Index--;

    }

}

class Entry {

    private int index = 0;
    private String date = "000";
    private String title = "000";
    private String mood = "0000000000";
    private String journal = " ";
    private String no;

    public Entry(int ind, String fn, String ln, String num, String no) {
        this.index = ind;
        this.date = fn;
        this.title = ln;
        this.mood = num;
        this.journal = no;
    }

    void setDate(String fn) {
        this.date = fn;
    }

    void setTitle(String ln) {
        this.title = ln;
    }

    void setMood(String num) {
        this.mood = num;
    }

    void setJournal(String no) {
        this.journal = no;
    }

    int getIndex() {
        return this.index;
    }

    String getDate() {
        return this.date;
    }

    String getTitle() {
        return this.title;
    }

    String getMood() {
        return this.mood;
    }

    String getJournal() {
        return this.journal;


    }
}
